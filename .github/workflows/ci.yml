name: CI Pipeline

on:
  push:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - "**.hpp"
      - "**.py"
      - "**.build"
      - "**.m"
      - "**.mm"
  pull_request:
    paths:
      - "**.c"
      - "**.h"
      - "**.cpp"
      - "**.hpp"
      - "**.py"
      - "**.build"
      - "**.m"
      - "**.mm"

jobs:
  meson_build:
    name: Running on ${{ matrix.os }} with Meson v${{ matrix.meson_version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, windows-2022]
        meson_version: ["1.2.0", "1.3.0", "1.4.0"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install Meson and Ninja
        run: |
          python -m pip install --upgrade pip
          python -m pip install meson==${{ matrix.meson_version }} ninja
      - name: Generate build file
        run: python meson-generator.py
      - name: Configure
        run: meson setup builddir
      - name: Compile
        run: meson compile -C builddir

  cmake_build:
    name: Running on ${{ matrix.os }} with CMake
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, windows-2022]
        cmake_version: ["3.29.2", "3.28.4", "3.27.9"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install CMake and Ninja
        run: |
          python -m pip install --upgrade pip
          python -m pip install cmake==${{ matrix.cmake_version }} ninja
      - name: Generate build file
        run: python cmake-generator.py
      - name: Configure
        run: cmake -B builddir
      - name: Compile
        run: cmake --build builddir

  scons_build:
    name: Running on ${{ matrix.os }} with SCons
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest, windows-2022]
        scons_version: ["4.7.0", "4.6.0", "4.5.1"]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install SCons
        run: python -m pip install scons
      - name: Generate build file
        run: python scons-generator.py
      - name: Compile
        run: scons -C solutions
